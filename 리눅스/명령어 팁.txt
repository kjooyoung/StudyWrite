*리눅스에서 확장자 (.exe, .txt) 이런건 그냥 명시적인것임 
	(윈도우는 저런거 안붙이면 실행자체가안되잔아)

vi /etc/sysconfig/iptables -- 방화벽위치

ps -ef | grep ~~~ --살았니 죽었니 보기
---------------
 vi 글숫자주기  
     :set nu

 편집안하고볼때 
 less 쓰셈
-------------
탐색
  nslookup : DNS 관련 정보를 조회  
  pwd : 내위치 

  ls -a : 히든파일까지 다나와라
  ls -l : 자세히 
  ls -la : 히든+자세히 
    

 df -h : h는 휴면 즉 인간이있을수있게 디스크상태를보여줘라?
---
# ps -ef | grep sshd 
  
     ps : 프로세스 
      -e : 전체,자식...
       f :  뭕지모름 
      |  : 파이프  (앞의 결과가 뒤에 것의 인풋이된다.) ( ps -ef 결과를 파이프로 넘겨줌 )
    grep : 내용검색 
    sshd : 키워드 

 - 전체프로세스중에 sshd찾아서 화면에뿌려라 이말임 

---
종료 
# halt  
# shutdown -h now  - 하기전에 sync 3번정도쳐봐라

-----

 useradd -g wheel webmaster   //보안위해 이렇게 계정을추가?

------

 처음로그인시 몇가지 설정을위해  쉘이 몇개 실행됨 
 그래서 보안설정을 해줘야함 

 vi /etc/profile  // 여기밑에 
 
  	#security 
	export TMOUT = 300~~~

-------------

  /etc/init.d ==>데몬실행시키는 스크립트들?

  /etc/init.d/sshd stop => 이러면 sshd데몬꺼짐 근데 이미연결되있는건 안꺼짐    

 데몬이어떻게작동함 ?

  sshd데몬은 연결이되면 fork로 복사해서 그거랑 데이터통신함?
   sshd-(accept)
      | 
      | fork
   sshd(복사본)------------------ ssh 


---------    
원격  root 막기 
  vi /etc/ssh/sshd_config 
 #PermitRootLogin yes 
    ↓
 PermitRootLogin no 

----------------------

  mkdir [옵션] 디렉터리 - 디렉토리 생성 
            -m  : 권한지정 기본 755
	-p   : 상위디렉토리없으면 상위도 만든다.

-----------------------  

  rmdir [옵션] 디렉토리 : 비어있는 디렉토리 삭제
            -p  : 상위 디렉토리도지움 다 비어있어야함 (잘안씀)

   rm [옵션] 디렉토리  
          -r  :다 하위까지지움
          -f  : 안물어보고 지움
          -i : 물어봄 애리어스 
-----------------------
cp [옵션] 원본 사본 
    -a : 원본 파일의 속성, 링크 정보들을 그대로 유지하면서 복사한다.  
    -i : 만약 복사 대상에 같은 이름의 파일이 존재하면 사용자에게 물어 본다.
    -f : 만약 복사 대상에 같은 이름의 파일이 존재하면 강제로 지우고 복사한다.
    -R : 디렉토리를 복사할 경우 그 안에 포함된 모든 하위 디렉터리와 파일들을 모두 복사한다
---------------------
mv

cp 명령어는  파일을 복사 하지만 mv 명령어는 파일을 이동하는 명령어이다.
unix에는 rename 명령어가 따로 없다. 즉, 파일 이름을 바꿀 때도 사용할 수 있는 명령어이다.

사용법
mv [옵션] 원본 목적지

옵션
-b : 덮어 쓰게 되는 경우 백업 파일을 만들고 파일을 만든다.  
-i : 덮어 쓸 때 사용자에게 물어 본다.
-f : 덮어 쓸 때 물어 보지 않는다.
-----------------------------------
cat
파일의 내용을 화면에 출력한다.

사용법
cat [옵션] 파일이름

옵션
-n : 줄 번호를 표시한다.  
-b : 빈 행은 제외하고 줄 번호를 표시한다.  
-E : 각 행마다 끝에 $ 문자를 출력한다.

-----------------------------------
 find
다양한 조건으로 특정 파일을 찾는다.

사용법
find [시작 디렉터리] [조건]

[시작 디렉터리]부터 시작해서 하위 디렉터리의 모든 파일을 [조건]에 맞는 파일을 검색한다.
[시작 디렉터리]를 / 로 지정하면 시스템 내의 모든 파일을 검색하게 된다.
[조건]은 다양하게 줄 수 있다.

1. ?name “문자열”
파일 이름이 문자열과 일치하는 파일을 찾는다. 문자열에는 다음과 같은 형식으로 지정할 수 있다.
“log” : 파일이름이 log인 파일을 찾는다.
“*log” : 파일 이름이 log로 끝나는 모든 파일을 찾는다.
“log*” : 파일 이름이 log로 시작하는 모든 파일을 찾는다.
“*log*” : 파일 이름 중간에 log가 들어가 있는 파일을 찾는다.
“?log” : 파일 이름에서 첫 글자는 어떤 문자라도 상관없고 log로 끝나는 4개 문자 이름의 파일
“log??” : 파일 이름 시작이 log로 시작하고 끝의 두 문자가 어떤 것이어도 상관없는 5개 문자 이름의 파일

---------------------------------
 grep
파일 내에서 또는 입력 값으로부터 특정 패턴을 검색한다.

사용법
grep [옵션] 표현  [파일(들)]

옵션
-v : 일치되는 내용이 없는 라인을 표시한다.

실습1
sshd 프로세스를 확인할 때, $ ps ?ef |  grep sshd 를 사용하게 되면 sshd 프로세스 뿐만 아니라 grep 프로세스도 표시된다.

cat | grep
cat출력이  grep입력으로 파이프연결해서?
grep root /var/log/secure  - 로그인시도횟수 볼수있지
grep -c root /var/log/secure  - 로그인시도횟수 볼수있지
 
=--------------------------------------------
파이프(pipe)

프로그램의 실행결과를 다른 프로그램의 입력으로 연결한다. 
둘 이상의 명령을 함께 사용하고, 한 명령어의 출력결과를 다른 명령어의
입력으로 전환하는 것을 파이프(pipe)라 한다.
--------------------------------------------

3.4.11 리다이렉션(redirection)
리다이렉션을 이용하면 명령의 출력을 변경할 수 있다. 명령어의 결과는 기본적으로 터미널(stdout) 이다. 리다이렉션을 이용하면 파일에 기록할 수 있다.

연산자
명령어 > 파일 : 파일이 없으면 생성하고, 있다면 기존의 내용을 지운다. 
명령어 >> 파일 : 파일이 없다면 생성하고, 있다면 기존의 내용에 추가한다.
명령어 < 파일 : 파일에서 표준 입력(stdin)을 받는다.

-----------------------------------------
3.4.12 chown
파일 소유자나 소유그룹을 변경하기 위한 명령어이다.

사용법
chmod [옵션] 소유자:소유그룹 파일명

옵션
-R : 경로와 그 하위 파일들을 모두 변경한다.
--help : 도움말을 출력한다.
--version : 버전 정보를 보여준다.

-----------------
압축 유틸리티 중 가장 많이 사용하는 것은 tar, gzip, bzip2 이다.

3.5.1 tar
tar 기본적으로 압축을 하지 않고 묶어 주는 역할(아카이브, archive)을 한다.

사용법
묶을 때 :  tar [옵션] 생성파일.tar 묶을 파일
해제할 때 : tar [옵션] 파일.tar 

옵션
-c : 새 저장 파일을 만든다. 즉 묶을 때 사용하는 옵션이다.
-x : 묶인 파일을 해제 한다. 
-v : 처리 중인 파일을 자세하게 보여준다. 
-f : 파일을 지정한다.


ex) log.tar.gz 한번에풀기 // tar xvfz log.tar.gz 



 